(* % last_period solves for Vt in the last period of life for the given set of grid points and % for all possible states *)If[VerboseOutput == True,Print["Running last_period_Value.m"]];LifePosn = LifeLength;(* % The file FindBest defines "pure" functions which return the optimal values of the control % variables for each possible choice of action (sell, rent, buy, keep, etc.).  The actual % optimal outcome will be the one which gives the greatest value among the feasible choices.*)<<FindBest_lastperiod.m;(*% VtbyChoice[[LifePosn]] will contain 6 lists of the values of the control variables given % optimal expenditure in each possible state, one list for each set of housing choices, i.e., % VtByChoice[[LifePosn,VtStateGridPoint]] = {{values for choice 1},{values for choice 2}, etc}*)VtByChoice[[LifeLength]] = {};(* % For the last period of life, loop through all 6 housing choices, using FindBest % to find the optimal values of the control variables for every possible state *)ClearAll[EtVtp1];EtVtp1[st_,htEnd_,AggState_,EmpState_,RiskySharet_,LifePosn_] := If[st<smin,GreatBadness-(RiskySharet)^2,-(RiskySharet)^2];ClearAll[Phit];Phit[st_,htEnd_,AggState_,EmpState_,LifePosn_] := If[st<smin,GreatBadness,0];Do[Print["Calculating Results for Choice "<>ToString[LoopOverChoices]];VtByChoice[[LifeLength]] =         Append[VtByChoice[[LifeLength]],Map[FindBest[[LifeLength,LoopOverChoices]],VtStateGrid[[LifeLength]]]];,{LoopOverChoices,NumOfChoices}];ClearAll[EtVtp1];       (* Now that VtByChoice has been calculated, install permanent versions of key functions *)(* % For each possible state VtVals picks the housing choice which has the highest value of Vt% by choosing the one with the greatest first element of the list of control vars (which is Vt) *)VtVals[[LifeLength]] = Map[MaxList,Transpose[VtByChoice[[LifeLength]]]];(* % Set up the functions to interpolate between grid points*)<<function_definitions_Value.m;EarliestEtVtp1Solved = LifePosn;<<make_interpolating_Value.m;EarliestPeriodSolved = LifePosn;