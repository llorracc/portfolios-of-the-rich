(*This file creates transition matrices for the individual and aggregate states andcalculates income by state, average unemployment risk by state,the average unemployment rates for the three aggregate states, and otherstatistics.*)(*Create a matrix that indicates the probability, for an individual currently in each possible (AggState,EmpState) cell, of transiting to every other possible (AggState, EmpState)cell next period.*)AggEmpStateTransitionMatrix = Table[0,{i,NumOfAggStates*NumOfEmpStates},{j,NumOfAggStates*NumOfEmpStates}];Do[AggEmpStateTransitionMatrix[[  (LoopOverCurrentAggStates-1)*NumOfEmpStates+LoopOverCurrentEmpStates,  (LoopOverFutureAggStates-1 )*NumOfEmpStates+LoopOverFutureEmpStates]] =     EmpStateProb[LoopOverFutureAggStates,LoopOverCurrentEmpStates,LoopOverFutureEmpStates]    *AggStateProb[LoopOverCurrentAggStates,LoopOverFutureAggStates];,{LoopOverCurrentAggStates,NumOfAggStates},{LoopOverCurrentEmpStates,NumOfEmpStates},{LoopOverFutureAggStates,NumOfAggStates},{LoopOverFutureEmpStates,NumOfEmpStates}](*In a model with only two aggregate states, expansion and contraction, one might expect that expected future aggregate labor income could take onlytwo possible values.  However, the fact that unemployment spells lasttwo periods complicates the picture; in essence, it implies that there are four aggregate states: the economy can be in 1) the first quarter of aboom (with still a somewhat elevated population of unemployment as a hangoverfrom the previous recession); 2) the second or subsequent quarters of a boom;3) first quarter of a bust, with consequently lower unemployment thanin 4) the second or subsequent quarters of a bust, with constant highunemployment.To calculate annuity labor income at each period, we need to know 1) what thecurrent aggregate state is and 2) what the distribution of consumers is acrosspossible employment states.  To know the distribution of consumers acrossemployment states, we need to know what the distribution of consumers wasacross employment states in the previous period.  But the distribution of consumers in the previous period will depend on 1) what the previousperiod's aggregate state was, and 2) what the previous period's distributionof consumers was across aggregate states, ad infinitum.The way to capture this whole process is to set up a larger transitionmatrix which includes not just the current aggregate state and the currentemployment state but also the past aggregate state.  Then the steady-statedistribution of consumers across cells of this matrix will contain thenecessary information about proportions of consumers in each employmentcategory in each of the four aggregate states.The structure of the transition matrix is:                                                  LastAggState                                                  CurrentAggState                                                  CurrentEmpStateLastAggState  CurrentAggState  CurrentEmpState *)AggAggStateTransitionMatrix = Table[0,{i,NumOfAggStates*NumOfAggStates},{j,NumOfAggStates*NumOfAggStates}];Do[AggAggStateTransitionMatrix[[  (RowAggStateTm1-1)*NumOfAggStates+RowAggStateT,  (ColAggStateT  -1)*NumOfAggStates+ColAggStateTp1]] =       AggStateProb[RowAggStateT,ColAggStateTp1] *If[RowAggStateT==ColAggStateT,1,0]  ,{RowAggStateTm1,NumOfAggStates}  ,{RowAggStateT  ,NumOfAggStates}  ,{ColAggStateT  ,NumOfAggStates}  ,{ColAggStateTp1,NumOfAggStates}];AggAggEmpStateTransitionMatrix = Table[Table[0,{j,NumOfAggStates*NumOfAggStates*NumOfEmpStates}],{i,NumOfAggStates*NumOfAggStates*NumOfEmpStates},{j,NumOfAggStates*NumOfAggStates*NumOfEmpStates}];Do[AggAggEmpStateTransitionMatrix[[  (RowAggStateTm1-1)*NumOfAggStates*NumOfEmpStates+(RowAggStateT-1  )*NumOfEmpStates+RowEmpStateT  ,  (ColAggStateT  -1)*NumOfAggStates*NumOfEmpStates+(ColAggStateTp1-1)*NumOfEmpStates+ColEmpStateTp1]] =    EmpStateProb[ColAggStateTp1,RowEmpStateT,ColEmpStateTp1]   *AggStateProb[RowAggStateT,ColAggStateTp1]*If[RowAggStateT==ColAggStateT,1,0]  ,{RowAggStateTm1,NumOfAggStates}  ,{RowAggStateT  ,NumOfAggStates}  ,{RowEmpStateT  ,NumOfEmpStates}  ,{ColAggStateT  ,NumOfAggStates}  ,{ColAggStateTp1,NumOfAggStates}  ,{ColEmpStateTp1,NumOfEmpStates}];TransitoryIncomeByAggEmpState =       Flatten[        Table[          Table[            etVals[[LifePosn,LoopOverAggStates,LoopOverEmpStates]] . etProb[[LifePosn,LoopOverAggStates,LoopOverEmpStates]]          ,{LoopOverEmpStates,NumOfEmpStates}]        ,{LoopOverAggStates,NumOfAggStates}]     ] (* End Flatten[] *)TransitoryIncomeByAggAggEmpState = Flatten[Table[TransitoryIncomeByAggEmpState,{NumOfAggStates}]];PermanentIncomeVarianceByAggEmpState =       Flatten[        Table[          Table[            ((epVals[[LifePosn,LoopOverAggStates,LoopOverEmpStates]]              -epVals[[LifePosn,LoopOverAggStates,LoopOverEmpStates]].epProb[[LifePosn,LoopOverAggStates,LoopOverEmpStates]])^2)            .epProb[[LifePosn,LoopOverAggStates,LoopOverEmpStates]]          ,{LoopOverEmpStates,NumOfEmpStates}]        ,{LoopOverAggStates,NumOfAggStates}]     ]; (* End Flatten[] *)(* % NOTE: This do loop is new so that G can vary over the lifetime *)PermanentIncomeGrowthByAggEmpState = Table[{},{NumOfLifeStages}];Do[PermanentIncomeGrowthByAggEmpState[[LoopOverLifeStages]] =       Flatten[        Table[                   Table[(G[[StartOfLifePart[[LoopOverLifeStages]]         ,LoopOverAggStates]] epVals[[LifePosn,LoopOverAggStates,LoopOverEmpStates]] . epProb[[LifePosn,LoopOverAggStates,LoopOverEmpStates]])          ,{LoopOverEmpStates,NumOfEmpStates}]        ,{LoopOverAggStates,NumOfAggStates}]     ]; (* End Flatten[] *)      ,{LoopOverLifeStages,NumOfLifeStages}]; (* End Do[] *)JobLossRiskByAggEmpState =       Flatten[        Table[          Table[            EmpStateProb[LoopOverAggStates,LoopOverEmpStates,EmpStateJobLost]           ,{LoopOverEmpStates,NumOfEmpStates}]        ,{LoopOverAggStates,NumOfAggStates}]     ] (* End Flatten[] *)JobLossRiskByAggAggEmpState = Flatten[{JobLossRiskByAggEmpState,JobLossRiskByAggEmpState}];AggSteadyStateProbs       = FindRightEigenVec[Transpose[      AggStateTransitionMatrix]];AggAggSteadyStateProbs    = FindRightEigenVec[Transpose[   AggAggStateTransitionMatrix]];AggEmpSteadyStateProbs    = FindRightEigenVec[Transpose[   AggEmpStateTransitionMatrix]];AggAggEmpSteadyStateProbs = FindRightEigenVec[Transpose[AggAggEmpStateTransitionMatrix]];If[VerboseSetup == True,	Print["This economy spends the following fractions of time in each aggregate state:"];	Print[AggSteadyStateProbs];	Print["Consumers in this economy spend the following fractions of time in each state:"];	Print[AggEmpSteadyStateProbs];];AggUnempRates = Table[0,{NumOfAggStates}];Do[  If[VerboseSetup == True,Print["The average unemployment rate during aggregate state "<>ToString[LoopOverAggStates]<>" is: "]];  AggUnempRates[[LoopOverAggStates]] = 1-    AggEmpSteadyStateProbs[[(LoopOverAggStates-1)*NumOfEmpStates+EmpStateEmployed]]/    AggSteadyStateProbs[[LoopOverAggStates]];  If[VerboseSetup==True,Print[AggUnempRates[[LoopOverAggStates]]]];,{LoopOverAggStates,NumOfAggStates}];If[VerboseSetup == True,	Print["The overall average unemployment rate is:"];	Print[AggSteadyStateProbs . AggUnempRates];];If[VerboseSetup == True,Do[  If[AggStateTransitionMatrix[[LoopOverLastAggState,LoopOverAggStates]] > 0,    (* then *)      Print["Current state: "<>ToString[LoopOverAggStates]<>", Last State: "<>ToString[LoopOverLastAggState]];      Print["Unemployment rate: "<>            ToString[1-AggAggEmpSteadyStateProbs[[                         (LoopOverLastAggState-1)*NumOfAggStates*NumOfEmpStates                        +(LoopOverAggStates    -1)*NumOfEmpStates                        +EmpStateEmployed]]/AggAggSteadyStateProbs[[(LoopOverLastAggState-1)*NumOfAggStates+LoopOverAggStates]]]]    ] (* end If[] *)  ,{LoopOverLastAggState,NumOfAggStates},{LoopOverAggStates    ,NumOfAggStates}];];AnnualPermanentIncomeVariance = PermanentIncomeVarianceByAggEmpState . AggEmpSteadyStateProbs*4;Print["The average annual standard deviation of innovations to permanent income is: ",(AnnualPermanentIncomeVariance)^.5];(* % NOTE: This do loop is new so that G can vary over the lifetime *)GrowthMatrixRow               = Table[{},{NumOfLifeStages}];GrowthMatrixRowAggAggEmp      = Table[{},{NumOfLifeStages}];GrowthMatrixAggAggEmp         = Table[{},{NumOfLifeStages}];PDVMatrixAggAggEmp            = Table[{},{NumOfLifeStages}];AnnuityIncomeByAggAggEmpState = Table[{},{NumOfLifeStages}];AnnuityIncomeByAggEmpState    = Table[{},{NumOfLifeStages}];AnnuityIncomeByAggAgg         = Table[{},{NumOfLifeStages}];Do[GrowthMatrixRow[[LoopOverLifeStages]] =  Flatten[    Table[      Table[G[[StartOfLifePart[[LoopOverLifeStages]],LoopOverAggStates]]       ,{LoopOverEmpStates,NumOfEmpStates}]    ,{LoopOverAggStates,NumOfAggStates}]  ]; (* End Flatten *)GrowthMatrixRowAggAggEmp[[LoopOverLifeStages]] =Flatten[  Table[    Table[      Table[        G[[StartOfLifePart[[LoopOverLifeStages]],LoopOverAggStates]]*        epVals[[LifePosn,LoopOverAggStates,LoopOverEmpStates]] . epProb[[LifePosn,LoopOverAggStates,LoopOverEmpStates]]      ,{LoopOverEmpStates,NumOfEmpStates}]    ,{LoopOverAggStates,NumOfAggStates}]  ,{LoopOverPastAggStates,NumOfAggStates}]]; (* End Flatten *)GrowthMatrixAggAggEmp[[LoopOverLifeStages]] =Table[GrowthMatrixRowAggAggEmp[[LoopOverLifeStages]],{NumOfAggStates*NumOfAggStates*NumOfEmpStates}];PDVMatrixAggAggEmp[[LoopOverLifeStages]] = Inverse[   IdentityMatrix[NumOfAggStates*NumOfAggStates*NumOfEmpStates]   -GrowthMatrixAggAggEmp[[LoopOverLifeStages]] *Transpose[AggAggEmpStateTransitionMatrix] / DiscountR];AnnuityIncomeByAggAggEmpState[[LoopOverLifeStages]] = Transpose[PDVMatrixAggAggEmp[[LoopOverLifeStages]]]. TransitoryIncomeByAggAggEmpState * (DiscountR-1)/DiscountR;AnnuityIncomeByAggEmpState[[LoopOverLifeStages]]     =Take[AnnuityIncomeByAggAggEmpState[[LoopOverLifeStages]],NumOfAggStates*NumOfEmpStates];AnnuityIncomeByAggAgg[[LoopOverLifeStages]] = Flatten[  Table[      Sum[AnnuityIncomeByAggAggEmpState[[LoopOverLifeStages]][[             (LoopOverPastAggStates-1)*NumOfAggStates*NumOfEmpStates            +(LoopOverAggStates    -1)*               NumOfEmpStates            +LoopOverEmpStates]]*          AggAggEmpSteadyStateProbs[[             (LoopOverPastAggStates-1)*NumOfAggStates*NumOfEmpStates            +(LoopOverAggStates    -1)*               NumOfEmpStates            +LoopOverEmpStates]]      ,{LoopOverEmpStates,NumOfEmpStates}]        /(AggAggSteadyStateProbs[[(LoopOverPastAggStates-1)*NumOfAggStates+LoopOverAggStates]]          +If[AggAggSteadyStateProbs[[(LoopOverPastAggStates-1)*NumOfAggStates+LoopOverAggStates]]==0,1,0])  ,{LoopOverPastAggStates,NumOfAggStates}  ,{LoopOverAggStates,NumOfAggStates}  ]];,{LoopOverLifeStages,NumOfLifeStages}]; (*End Do *)ExpectedJobLossRiskByAggEmpState[Period_] :=  (  AggEmpStateTransitionMatrix . JobLossRiskByAggEmpState   + AggEmpStateTransitionMatrix . AggEmpStateTransitionMatrix . JobLossRiskByAggEmpState   + AggEmpStateTransitionMatrix . AggEmpStateTransitionMatrix . AggEmpStateTransitionMatrix . JobLossRiskByAggEmpState   + AggEmpStateTransitionMatrix . AggEmpStateTransitionMatrix . AggEmpStateTransitionMatrix . AggEmpStateTransitionMatrix . JobLossRiskByAggEmpState ) . AggEmpState[Period];AggEmpState[Period_] := Table[ (EmploymentStatusCounts[[Period,Mod[i-1,NumOfEmpStates]+1]]/NumOfPeople) *If[(i > (aggstate[[Period]]-1)*NumOfEmpStates) && i <= (aggstate[[Period]])*NumOfEmpStates,1,0]//N,{i,NumOfEmpStates*NumOfAggStates}];TransitoryIncomeByAggAgg = Flatten[  Table[      Sum[TransitoryIncomeByAggAggEmpState[[             (LoopOverPastAggStates-1)*NumOfAggStates*NumOfEmpStates            +(LoopOverAggStates    -1)*               NumOfEmpStates            +LoopOverEmpStates]]*          AggAggEmpSteadyStateProbs[[             (LoopOverPastAggStates-1)*NumOfAggStates*NumOfEmpStates            +(LoopOverAggStates    -1)*               NumOfEmpStates            +LoopOverEmpStates]]      ,{LoopOverEmpStates,NumOfEmpStates}]/         (AggAggSteadyStateProbs[[(LoopOverPastAggStates-1)*NumOfAggStates+LoopOverAggStates]]          +If[AggAggSteadyStateProbs[[(LoopOverPastAggStates-1)*NumOfAggStates+LoopOverAggStates]]==0,1,0])  ,{LoopOverPastAggStates,NumOfAggStates}  ,{LoopOverAggStates,NumOfAggStates}  ]];(*Clear[AnnuityIncomeByPeriod];AnnuityIncomeByPeriod[Period_] :=AnnuityIncomeByAggAgg[[LifePart]][[(aggstate[[Period]]-1)*NumOfAggStates+aggstate[[Period-1]]]];TransitoryIncomeByPeriod[Period_] := TransitoryIncomeByAggAgg[[(aggstate[[Period]]-1)*NumOfAggStates+aggstate[[Period-1]]]];*)Clear[TransitoryIncomeByAggAggState];TransitoryIncomeByAggAggState[LastAggState_,CurrentAggState_] :=   TransitoryIncomeByAggAgg[[(LastAggState-1)*NumOfAggStates+CurrentAggState]];(*Clear[AnnuityIncomeByAggAggState];AnnuityIncomeByAggAggState[LastAggState_,CurrentAggState_] :=   AnnuityIncomeByAggAgg[[(LastAggState-1)*NumOfAggStates+CurrentAggState]];*)(* EmploymentStatusByAggState[AggState_] := Block[{},startpos = (AggState-1)*NumOfEmpStates+1;SSprobs = Take[AggEmpSteadyStateProbs,{startpos,startpos+2}];SSprobs / Last[CumulativeSums[SSprobs]]];PermanentIncomeGrowthByAggState[AggState_] := Block[{},startpos = (AggState-1)*NumOfEmpStates+1;Take[PermanentIncomeGrowthByAggEmpState,{startpos,startpos+2}]];Print["Annual expected growth in permanent labor income in state 1:",(PermanentIncomeGrowthByAggState[1] . EmploymentStatusByAggState[1])^PeriodsPerYear];Print["Annual expected growth in permanent labor income in state 2:",(PermanentIncomeGrowthByAggState[2] . EmploymentStatusByAggState[2])^PeriodsPerYear];Print["Annual expected growth in permanent labor income in state 3:",(PermanentIncomeGrowthByAggState[3] . EmploymentStatusByAggState[3])^PeriodsPerYear];*)(* NEW PART *)EmploymentStatusByAggState[AggState_] := Block[{},startpos = (AggState-1)*NumOfEmpStates+1;SSprobs =Take[AggEmpSteadyStateProbs,{startpos,startpos+NumOfEmpStates-1}];SSprobs / Last[CumulativeSums[SSprobs]]];PermanentIncomeGrowthByAggState[LifePart_,AggState_] := Block[{},startpos = (AggState-1)*NumOfEmpStates+1;Take[PermanentIncomeGrowthByAggEmpState[[LifePart]],{startpos,startpos+NumOfEmpStates-1}]];If[VerboseSetup == True,Print["Annual expected growth in permanent labor income by StageOfLife/aggstate:"];Do[Print["part "<>ToString[LoopOverLifeStages]<>" state "<>ToString[LoopOverAggStates]];Print[(PermanentIncomeGrowthByAggState[LoopOverLifeStages,LoopOverAggStates]. EmploymentStatusByAggState[LoopOverAggStates])^PeriodsPerYear];   ,{LoopOverAggStates,NumOfAggStates}   ,{LoopOverLifeStages,NumOfLifeStages}];Print["Annual expected overall growth in permanent labor income by StageOfLife:"];Do[Print["part "<>ToString[LoopOverLifeStages]];Print[(PermanentIncomeGrowthByAggEmpState[[LoopOverLifeStages]] .AggEmpSteadyStateProbs)^PeriodsPerYear];   ,{LoopOverLifeStages,NumOfLifeStages}];];