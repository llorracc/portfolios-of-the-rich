(*% This program defines the "pure" functions which return the value % of pursuing each of the possible housing options available at time LifePosn for % a given state. % FindBest requires several ambient variables to be defined.*)If[VerboseOutput == True,Print["Running FindRiskyShare.m"]];FindRiskyShareKt[[LifePosn]] =Block[{ st       = #[[stInPosFOC]],PermInc  = #[[PermIncInPosFOC]],QState   = #[[QStateInPosFOC]],EmpState = #[[EmpStateInPosFOC]],KShare   = #[[KSharetInPosFOC]]}, If[KShare == 1,    (* then *) RiskySharetResult = 0,   (* else *)   If[SolveForRiskyShare == False,    (* then *) RiskySharetResult = 0,    (* else *)        If[st > smin,                  (*   If they have positive liquid assets            *)           (* then *)                 (*     then choose optimal level of expenditures et *)              LocationOfBest = 0;RiskySharetResult = 0;ValOfBest = PhiKSt[st,PermInc,QState,EmpState,KShare,0,LifePosn];              Do[              TestVal = PhiKSt[st,PermInc,QState,EmpState,KShare,RiskyShareGrid[[i]],LifePosn];              If[TestVal>ValOfBest,                (* then *)                 ValOfBest=TestVal;LocationOfBest=i];              ,{i,Length[RiskyShareGrid]}];              If[LocationOfBest>0,                (* then *)                RiskySharetResult=RiskyShareGrid[[LocationOfBest]]];            ,(* else *)          RiskyShare = RiskySharetResult = 0;       ];  (* End If st > smin *)    ];     (* End If SolveForRiskyShare == False *)  ];       (* End If KShare == 1 *)RiskySharetResult //N] &;{RiskySharetOutPos,PhistOutPos,PhihtOutPos} = {1,2,3};