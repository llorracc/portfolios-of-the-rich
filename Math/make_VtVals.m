(* % make_VtVals is just like last_period; it solves for Vt in the given period of life % (LifePosn) for the given set of grid points and for all possible states *)If[VerboseOutput == True,Print["Running make_VtVals.m"]];<<FindBest.m;(*% VtbyChoice[[LifePosn]] will contain 6 lists of the values of the control variables given % optimal expenditure in each possible state, one list for each set of housing choices, i.e., % VtByChoice[[LifePosn,VtStateGridPoint]] = {{values for choice 1},{values for choice 2}, etc}*)VtByChoice[[LifePosn]] = {};(* % For the given period of life, loop through all 6 housing choices, using FindBest % to find the optimal values of the control variables for every possible state *)Do[Print["Calculating Results for Choice "<>ToString[LoopOverChoices]];VtByChoice[[LifePosn]] =         Append[VtByChoice[[LifePosn]],               Map[FindBest[[LifePosn,LoopOverChoices]],VtStateGrid[[LifePosn]]]              ],{LoopOverChoices,NumOfChoices}];(* % For each possible state VtVals picks the housing choice which has the highest value of Vt% by choosing the one with the greatest first element of the list of control vars (which is Vt) *)VtVals[[LifePosn]] = Map[MaxList,Transpose[VtByChoice[[LifePosn]]]];(* % Set up the functions to interpolate between grid points*)