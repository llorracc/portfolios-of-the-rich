(*% This program defines the "pure" functions which return the value % of pursuing each of the possible housing options available at time LifePosn for % a given state. % FindBest requires several ambient variables to be defined.*)If[VerboseOutput == True,Print["Running FindBest.m"]];FindBest[[LifePosn,ChoiceBasic]] =Block[{ xt = #[[xtVtPos]],htStart = #[[htStartVtPos]],AggState=#[[AggStateVtPos]],EmpState=#[[EmpStateVtPos]],epDrawt=#[[epDrawtVtPos]]},  If[xt < xmin,      (* then punish them for violating the liquidity constraint *)        RiskySharet=ct=zt=st=et=0;        vt= GreatBadness + beta[[LifePosn+1]] EtVtp1[st,hmin,AggState,EmpState,RiskySharet,LifePosn];,      (* else find the optimum *)      ctMultiplyFactor = htStart^-gamma G[[LifePosn,AggState]] epDrawt;      EtVtp1MultiplyFactor = (G[[LifePosn,AggState]] epDrawt)^((1-gamma)(1-rho));      htStartScaled = htStart/(G[[LifePosn,AggState]] epDrawt);            MaxResults=	        (* %   to maximize utility u[] by minimizing        *)	            FindMinimum[	        (* %   the negative                                 *)		                -(((ct ctMultiplyFactor)^(1-rho))/(1-rho)		+beta[[LifePosn+1]] *EtVtp1MultiplyFactor*                        Phit[xt-ct                             ,htStartScaled +catchup*(ct-htStartScaled)                             ,AggState                             ,EmpState                             ,LifePosn]                 ) (* End of utility minimand *)                ,{ct,{xmin+epsilon,xt}},MaxIterations->100];          If[Length[MaxResults]>2,Print["MaxResults of improper form; probably Findminimum failed."];Interrupt[]];          et = (ct /. MaxResults[[2]]);          If[Not[NumberQ[et]], (* then *) Print["ChoiceBasic failed."];Print[##];Interrupt[]];           vt = -MaxResults[[1]];          ct = et;          htEnd = htStartScaled+catchup*(ct-htStartScaled epDrawt);          st = xt-ct;If[st < 0,st=0;ct=xt;(*#Print["Error in ChoiceBasic: st < 0"];Print[##];Interrupt[]#*)];          RiskySharet=RiskySharetOpt[st,htStartScaled+catchup*(ct-htStartScaled),AggState,EmpState,LifePosn];    ]; (* End If[xt > xmin] *){vt,ChoiceBasic,ct,htEnd,st,RiskySharet}] &;