(*% Assuming that you have already solved for the current LifePosn, % construct the expectation of next periods Vt*)(* % Inititalize current life position state grid for solving *)VtStateGrid[[LifePosn]]     = VtStateGridBaseline;EtVtp1StateGrid[[LifePosn]] = EtVtp1StateGridBaseline;PhitStateGrid[[LifePosn]]   = PhitStateGridBaseline;(* % Add the current LifePosn to the list of state variables *)EtVtp1StateGridAugmented = AddOutcome[EtVtp1StateGrid[[LifePosn]],Table[LifePosn,{Length[EtVtp1StateGrid[[LifePosn]]]}]];If[VerboseOutput == True,Print["Creating EtVtp1_Value."]];(* % Calculate the expected value of Vt for LifePosn+1 *)EtVtp1Vals[[LifePosn]] =  Map[EtVtp1Raw,EtVtp1StateGridAugmented];(* % Set up the data and functions to do EtVtp1 interpolation *)EtVtp1InterpData[[LifePosn]] = AddOutcome[EtVtp1StateGrid[[LifePosn]],EtVtp1Vals[[LifePosn]]];EtVtp1InterpFunc[[LifePosn]] = Interpolation[EtVtp1InterpData[[LifePosn]],InterpolationOrder->{1,1,1,1,1}];PhitStateGridAugmented = AddOutcome[PhitStateGrid[[LifePosn]],Table[LifePosn,{Length[PhitStateGrid[[LifePosn]]]}]];<<FindPhit.m;PhitVals[[LifePosn]] =  Map[FindPhit[[LifePosn]],PhitStateGrid[[LifePosn]]];(* % Set up the data and functions to do Phit interpolation *)PhitInterpData[[LifePosn]] = AddOutcome[PhitStateGrid[[LifePosn]],Transpose[PhitVals[[LifePosn]]][[PhitValOutPos]]];PhitInterpFunc[[LifePosn]] = Interpolation[PhitInterpData[[LifePosn]],InterpolationOrder->{1,1,1,1}];RiskySharetOptInterpData[[LifePosn]]=AddOutcome[PhitStateGrid[[LifePosn]],Transpose[PhitVals[[LifePosn]]][[RiskySharetOptOutPos]]];RiskySharetOptInterpFunc[[LifePosn]]=Interpolation[RiskySharetOptInterpData[[LifePosn]],InterpolationOrder->{1,1,1,1}];EarliestEtVtp1Solved = LifePosn;