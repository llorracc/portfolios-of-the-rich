(*% This program defines the "pure" functions which return the value % of pursuing each of the possible housing options available at time LifePosn for % a given state. % FindBest requires several ambient variables to be defined.*)If[VerboseOutput == True,Print["Running FindKSharet.m"]];FindKSharet[[LifePosn]] =Block[{ st         = #[[stInPosFOC]],PermInc    = #[[PermIncInPosFOC]],QState     = #[[QStateInPosFOC]],EmpState   = #[[EmpStateInPosFOC]]},  If[SolveForKShare == False,    (* then *) KSharetResults = 0,    (* else *)        If[st > smin,                  (*   If they have positive liquid assets            *)           (* then *)                 (*     then choose optimal level of expenditures et *)              LocationOfBest = 0;KSharetResults=0;              ValOfBest = PhiKSt[st,PermInc,QState,EmpState,0,RiskyShareKt[st,PermInc,QState,EmpState,0,LifePosn],LifePosn];(*              Print["ValOfBest = ",ValOfBest];*)              Do[              TestVal = PhiKSt[st,PermInc,QState,EmpState,KShareGrid[[i]],RiskyShareKt[st,PermInc,QState,EmpState,KShareGrid[[i]],LifePosn],LifePosn];(*              Print[TestVal];*)              If[TestVal>ValOfBest,                (* then *)                 ValOfBest=TestVal;LocationOfBest=i];              ,{i,Length[KShareGrid]}];              If[LocationOfBest>0,                (* then *)                  KSharetResults=KShareGrid[[LocationOfBest]]];            ,(* else *)              KShare = KSharetResults = 0;       ];  (* End If st > smin *)  ];       (* End If SolveForKShare == False *)KSharetResults //N] &;