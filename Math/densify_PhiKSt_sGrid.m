(*ListOfPhiKStPrimes =   Table[	PhiKStPrime[sGrid[[i]],PermIncGrid[[2]],2,1,0,0,LifePosn]  ,{i,Length[sGrid]}];MaxPhiKStPrime = Max[ListOfPhiKStPrimes];MinPhiKStPrime = Min[ListOfPhiKStPrimes];BiggestTolerableGap = (MaxPhiKStPrime-MinPhiKStPrime)/NumOfsSteps;sAddGrid = {};Do[  Gap =  ListOfPhiKStPrimes[[i-1]]-ListOfPhiKStPrimes[[i]];  If[Gap>BiggestTolerableGap,    (* then *)      NumToAdd =       Round[(ListOfPhiKStPrimes[[i-1]]-ListOfPhiKStPrimes[[i]])/          BiggestTolerableGap];      sGap = sGrid[[i]]-sGrid[[i-1]];      sAddGrid=        Union[          sAddGrid,          Table[            sPointsToAdd            ,{sPointsToAdd,sGrid[[i-1]]+sGap/(NumToAdd+1),            sGrid[[i]]-              sGap/(NumToAdd+1),(sGrid[[i]]-sGrid[[i-1]])/(NumToAdd+1)}            ]]    ]  ,{i,2,Length[sGrid]}];If[Length[sAddGrid]>0,  (* If there were points to add *)  sGrid = Union[sGrid,sAddGrid];  MakeArgArrays[sAddFunctions];  MakeEtp1AddArgArrayAugmented = AddOutcome[MakeEtp1AddArgArray,Table[LifePosn,{Length[MakeEtp1AddArgArray]}]];  {FOCwrtKSharetResultsAdd,FOCwrtRiskySharetResultsAdd,PhiKSstResultsAdd,PhiKStResultsAdd} =     Transpose[Map[Apply[MakeEtp1Raw,#] &,MakeEtp1AddArgArrayAugmented]];  PhiKSstScaledAdd = PhiKSstResultsAdd^(1/-rho);  PhiKStScaledAdd  = ((1-rho)PhiKStResultsAdd)^(1/(1-rho));  PhiKStScaledMerged  = Join[PhiKStScaled,PhiKStScaledAdd];  PhiKSstScaledMerged = Join[PhiKSstScaled,PhiKSstScaledAdd];  FOCwrtKSharetResultsMerged=Join[FOCwrtKSharetResults,FOCwrtKSharetResultsAdd];  FOCwrtRiskySharetResultsMerged=Join[FOCwrtRiskySharetResults,FOCwrtRiskySharetResultsAdd];    MakeEtp1MergedArgArray = Join[MakeEtp1ArgArray,MakeEtp1AddArgArray];  PhiKStInterpData[[LifePosn]] = AddOutcome[MakeEtp1MergedArgArray,PhiKStScaledMerged];  PhiKStInterpFunc[[LifePosn]] = Interpolation[PhiKStInterpData[[LifePosn]],InterpolationOrder->1];  MakeArgArrays[sFunctions];  PhiKStInterpData[[LifePosn]] =     AddOutcome[MakeEtp1ArgArray,      Map[Apply[PhiKStInterpFunc[[LifePosn]], #]&, MakeEtp1ArgArray]    ];];PhiKStArgArrayAugmented = AddOutcome[PhiKStArgArray,Table[LifePosn,{Length[PhiKStArgArray]}]];PhiKStPrimeResults = Map[Apply[PhiKStPrime, #] &,PhiKStArgArrayAugmented];PhiKStPrimeInterpData[[LifePosn]] = AddOutcome[PhiKStArgArray,PhiKStPrimeResults];PhiKStPrimeInterpFunc[[LifePosn]] = Interpolation[PhiKStPrimeInterpData[[LifePosn]],InterpolationOrder->1];ListOfZeros = Table[0,{Length[PhiKStArgArray]}];PhiKStScaledFirstDerivs =   Transpose[    {PhiKStPrimeResults     ,ListOfZeros     ,ListOfZeros     ,ListOfZeros     ,ListOfZeros     ,ListOfZeros    }];(*PhiKStScaledFirstDerivs = Transpose[{(((1-rho)(Map[Apply[PhiKSt,{#[[1]]+.0001,#[[2]],#[[3]],#[[4]],#[[5]],#[[6]],#[[7]]}] &,PhiKStArgArrayAugmented]))^(1/(1-rho))-((1-rho)*Map[Apply[PhiKSt,{#[[1]]-.0001,#[[2]],#[[3]],#[[4]],#[[5]],#[[6]],#[[7]]}] &,PhiKStArgArrayAugmented])^(1/(1-rho)))/.0002,ListOfZeros,ListOfZeros,ListOfZeros,ListOfZeros,ListOfZeros}];PhiKStScaledFirstDerivs =   (PhiKStScaled^rho)*  Transpose[    {PhiKSstResults    ,ListOfZeros,ListOfZeros,ListOfZeros    ,FOCwrtKSharetResults,FOCwrtRiskySharetResults    }    ];*)If[Length[sAddGrid]>0,  (* then *)  PhiKStScaledLevelAndFirstDerivs =     Transpose[      {Map[Apply[PhiKStInterpFunc[[LifePosn]], #]&,PhiKStArgArray]      ,PhiKStScaledFirstDerivs}      ];,  (* else *)  PhiKStScaledLevelAndFirstDerivs =     Transpose[{PhiKStScaled,PhiKStScaledFirstDerivs}];];  If[etZeroProb > 0,  (* then *)    ValOfPhitScaledAtsEq0 = {0,{1,0,0,0,0,0}};    MakeInterpWithZeroVals["PhiKSt",InterpOrder,PhiKStScaled,ValOfPhitScaledAtsEq0],  (* else *)    MakeInterpGivenFunctionNameAndResults["PhiKSt",PhiKStScaledLevelAndFirstDerivs,InterpOrder]]; (* End If etZeroProb > 0 *)*)