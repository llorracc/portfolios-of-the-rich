(*% This program defines the "pure" functions which return the value % of pursuing each of the possible housing options available at time LifePosn for % a given state. % FindBest requires several ambient variables to be defined.*)If[VerboseOutput == True,Print["Running FindPhit.m"]];FindPhit[[LifePosn]] =Block[{ st = #[[stPhitPos]],htEnd = #[[htEndPhitPos]],AggState=#[[AggStatePhitPos]],EmpState=#[[EmpStatePhitPos]],ChoiceBasic = 1},  If[SolveForRiskyShare == False,    (* then *) RiskySharet = 0; vt = EtVtp1Raw[st,htEnd,AggState,EmpState,0,LifePosn];,    (* else *)       If[st > smin,                  (*   If they have positive liquid assets            *)           (* then *)                 (*     then choose optimal level of expenditures et *)                 RiskyShareResults=	        (* %   to maximize utility u[] by minimizing        *)	                 FindMinimum[	        (* %   the negative                                 *)		                            -EtVtp1[st                                   ,htEnd                                   ,AggState                                   ,EmpState                                   ,RiskyShare                                   ,LifePosn]                     ,{RiskyShare,{0,1}},MaxIterations->100];              If[Length[RiskyShareResults]>2,Print["RiskyShareResults of improper form; probably Findminimum failed"];Interrupt[]];              RiskySharet = Round[(RiskyShare /. RiskyShareResults[[2]])*1000]/1000;              vt=-RiskyShareResults[[1]];            ,(* else *)              RiskyShare = RiskySharet = 0;             vt= EtVtp1[0,htEnd,AggState,EmpState,0,LifePosn];       ];  (* End If st > smin *)    ];     (* End If SolveForRiskyShare == False *){vt,RiskySharet} //N] &;{PhitValOutPos,RiskySharetOptOutPos} = {1,2};